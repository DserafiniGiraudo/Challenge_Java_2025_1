services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server 
      dockerfile: Dockerfile 
    networks:
      - challenge_network
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - redis_data:/data/db
    networks:
      - challenge_network
    depends_on:
      - eureka-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - challenge_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  msvc-puntos-ventas:
    container_name: msvc-puntos-ventas
    build:
      context: .
      dockerfile: msvc-puntos-ventas/Dockerfile
    networks:
      - challenge_network
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy

  msvc-puntos-costos:
    container_name: msvc-puntos-costos
    build:
      context: .
      dockerfile: msvc-puntos-costos/Dockerfile
    networks:
      - challenge_network
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy

  msvc-acreditaciones:
    container_name: msvc-acreditaciones
    build:
      context: .
      dockerfile: msvc-acreditaciones/Dockerfile
    env_file:
      - .env
    networks:
      - challenge_network
    depends_on:
      mysql:
        condition: service_healthy
      msvc-puntos-ventas:
        condition: service_started

networks:
  challenge_network:
    driver: bridge

volumes:
  redis_data:
  mysql_data: